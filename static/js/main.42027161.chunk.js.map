{"version":3,"sources":["TimelineCard.js","About.js","Contact.js","Landing.js","Nav.js","TechnologyChip.js","TechnologyList.js","Project.js","Projects.js","Skills.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["StyledTimelineItem","withStyles","missingOppositeContent","display","TimelineItem","TimelineCard","props","TimelineSeparator","TimelineDot","color","isLast","TimelineConnector","TimelineContent","Paper","variant","sx","alignItems","justifyContent","p","height","width","textAlign","Typography","flexDirection","endDate","startDate","style","lineHeight","Divider","orientation","flexItem","mx","component","title","description","maxHeight","pl","marginLeft","src","img","alt","imgAlt","href","imgHref","maxWidth","alignSelf","About","bgcolor","Container","id","boxSizing","py","mb","Grid","container","spacing","item","xs","lg","Timeline","margin","Contact","elevation","m","my","Button","endIcon","Landing","position","mt","pr","sm","md","xl","flexShrink","zIndex","onClick","document","getElementById","scrollIntoView","block","behavior","flexGrow","StyledNavButton","styled","theme","palette","text","primary","textTransform","Nav","trigger","useScrollTrigger","disableHysteresis","threshold","React","useState","open","setOpen","AppBar","background","boxShadow","transition","px","Toolbar","fontWeight","Stack","direction","size","IconButton","edge","SwipeableDrawer","anchor","onOpen","onClose","setTimeout","TechnologyChip","large","Chip","borderRadius","fontSize","label","name","TechnologyList","technologies","map","t","flexWrap","gap","DevItem","listStyleType","Project","order","summary","devProcessItems","startIcon","repoLink","target","rel","websiteLink","pdfLink","image","Projects","Skills","darkTheme","typography","fontFamily","join","h1","h3","h4","shape","mode","App","createTheme","ThemeProvider","CssBaseline","Box","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.42027161.chunk.js","sourcesContent":["import TimelineConnector from \"@mui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@mui/lab/TimelineContent\";\r\nimport TimelineDot from \"@mui/lab/TimelineDot\";\r\nimport TimelineItem from \"@mui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@mui/lab/TimelineSeparator\";\r\nimport { Box, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\n\r\nconst StyledTimelineItem = withStyles({\r\n  missingOppositeContent: {\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n})(TimelineItem);\r\n\r\nexport const TimelineCard = (props) => {\r\n  return (\r\n    <StyledTimelineItem>\r\n      <TimelineSeparator>\r\n        <TimelineDot color=\"primary\" />\r\n        {props.isLast ? null : <TimelineConnector />}\r\n      </TimelineSeparator>\r\n      <TimelineContent>\r\n        <Paper\r\n          variant=\"outlined\"\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            p: 1,\r\n          }}\r\n        >\r\n          {/* Start and end date */}\r\n          <Box\r\n            sx={{\r\n              height: \"100%\",\r\n              width: \"3rem\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"overline\"\r\n              sx={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              {props.endDate\r\n                ? props.endDate\r\n                : props.startDate\r\n                ? props.startDate\r\n                : null}\r\n              {props.startDate && props.endDate ? (\r\n                <center style={{ lineHeight: 1 }}>-</center>\r\n              ) : null}\r\n              {props.startDate && props.endDate ? props.startDate : null}\r\n            </Typography>\r\n          </Box>\r\n          {/* Divider */}\r\n          <Divider orientation=\"vertical\" flexItem sx={{ mx: 1 }} />\r\n\r\n          {/* Title */}\r\n          <Box\r\n            sx={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle2\" component=\"div\">\r\n              <b>{props.title}</b>\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" component=\"div\">\r\n              {props.description}\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* Logo */}\r\n          <Box\r\n            sx={{\r\n              maxHeight: \"3rem\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              pl: 1,\r\n              marginLeft: \"auto\",\r\n            }}\r\n          >\r\n            <img\r\n              src={props.img}\r\n              alt={props.imgAlt}\r\n              href={props.imgHref}\r\n              style={{\r\n                display: \"block\",\r\n                maxWidth: \"4rem\",\r\n                maxHeight: \"3rem\",\r\n                height: \"auto\",\r\n                width: \"auto\",\r\n                alignSelf: \"flex-end\",\r\n              }}\r\n            />\r\n          </Box>\r\n        </Paper>\r\n      </TimelineContent>\r\n    </StyledTimelineItem>\r\n  );\r\n};\r\n","import Timeline from \"@mui/lab/Timeline\";\r\nimport { Box, Container, Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { TimelineCard } from \"./TimelineCard\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        bgcolor: \"grey.900\",\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        component=\"section\"\r\n        id=\"about\"\r\n        sx={{ bgcolor: \"grey.900\", boxSizing: \"border-box\", py: 8 }}\r\n      >\r\n        <Typography variant=\"h3\" component=\"h3\" sx={{ mb: 5 }}>\r\n          About me\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* Personal description */}\r\n          <Grid item xs={12} lg={5}>\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Kevin Katzkowski\r\n            </Typography>\r\n\r\n            <Typography variant=\"caption\" component=\"div\" sx={{ mb: 2 }}>\r\n              M. Sc. Informatics student at the Technical University of Munich\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" component=\"div\">\r\n              I'm a Master Informatics student at TUM with a passion for\r\n              computer science and technology in general. Specifically, I'm\r\n              focused on deep learning, computer vision, data science and other\r\n              artificial intelligence topics like machine learning and natural\r\n              language processing.\r\n            </Typography>\r\n          </Grid>\r\n\r\n          {/* Education & Work Experience*/}\r\n          <Grid item xs={12} lg={7}>\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Education & Work Experience\r\n            </Typography>\r\n\r\n            <Timeline\r\n              // position=\"alternate\"\r\n              sx={{ maxWidth: \"900px\", margin: \"auto\" }}\r\n            >\r\n              <TimelineCard\r\n                title=\"M. Sc. Informatics\"\r\n                startDate=\"2021\"\r\n                endDate=\"Today\"\r\n                description=\"TUM\"\r\n                img=\"./tum-logo.png\"\r\n                imgAlt=\"TUM Logo\"\r\n                imgHref=\"https://tum.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                title=\"B. Sc. Media Informatics\"\r\n                startDate=\"2018\"\r\n                endDate=\"2021\"\r\n                description=\"University of Bremen\"\r\n                img=\"./uni-hb-logo.png\"\r\n                imgAlt=\"Uni Bremen Logo\"\r\n                imgHref=\"https://uni-bremen.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                title=\"Working Student\"\r\n                startDate=\"2017\"\r\n                endDate=\"2020\"\r\n                description=\"WebMen Internet GmbH\"\r\n                img=\"./webmen-logo.jpg\"\r\n                imgAlt=\"WebMen Logo\"\r\n                imgHref=\"https://webmen.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                title=\"Intern Software Dev.\"\r\n                startDate=\"04.2017\"\r\n                description=\"WebMen Internet GmbH\"\r\n                img=\"./webmen-logo.jpg\"\r\n                imgAlt=\"WebMen Logo\"\r\n                imgHref=\"https://webmen.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                title=\"Intern Software Dev.\"\r\n                startDate=\"05.2015\"\r\n                description=\"encoway GmbH\"\r\n                img=\"./encoway-logo.png\"\r\n                imgAlt=\"encoway Logo\"\r\n                imgHref=\"https://encoway.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                isLast\r\n                title=\"A-Levels (Abitur)\"\r\n                startDate=\"2010\"\r\n                endDate=\"2018\"\r\n                description=\"Gymnasium Horn\"\r\n                img=\"./gym-horn-logo.png\"\r\n                imgAlt=\"Gymnasium Horn Logo\"\r\n                imgHref=\"https://309.sixcms.schule.bremen.de/startseite-1459\"\r\n              />\r\n            </Timeline>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import { Button, Container, Paper, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { MdWavingHand } from \"react-icons/md\";\r\n\r\nexport const Contact = () => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      component=\"section\"\r\n      id=\"contact\"\r\n      sx={{\r\n        height: \"95vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={0}\r\n        // variant=\"outlined\"\r\n        sx={{ m: 10, width: \"80%\", height: \"40%\", textAlign: \"center\" }}\r\n      >\r\n        <Typography variant=\"h1\" component=\"h2\" sx={{ my: 4 }}>\r\n          Get in Touch\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          I'm happy to hear from you!\r\n        </Typography>\r\n        <Button variant=\"outlined\" sx={{ my: 3 }} endIcon={<MdWavingHand />}>\r\n          Say hello\r\n        </Button>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n","import { Box, Button, Container, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const Landing = () => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      component=\"section\"\r\n      sx={{\r\n        height: \"90vh\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        mt: 4,\r\n        pr: { xs: 0, sm: 0, md: 0, lg: 0, xl: 0 },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          mt: { xs: 0, md: \"15vw\" },\r\n          flexShrink: 1,\r\n          width: \"65%\",\r\n          zIndex: 1,\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h1\" component=\"h1\" sx={{ my: { xs: 0, md: 4 } }}>\r\n          Hey, I'm{\" \"}\r\n          <Box sx={{ display: \"inline\", color: \"primary.main\" }}>Kevin</Box>.\r\n        </Typography>\r\n\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          component=\"p\"\r\n          sx={{ my: 2, maxWidth: \"70%\" }}\r\n        >\r\n          M. Sc. Informatics student at the Technical University of Munich\r\n          focused on deep learning, data science and artificial intelligence in\r\n          general.\r\n        </Typography>\r\n\r\n        <Button\r\n          variant=\"outlined\"\r\n          sx={{ my: 2 }}\r\n          onClick={() =>\r\n            document\r\n              .getElementById(\"projects\")\r\n              .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n          }\r\n        >\r\n          My projects\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Image */}\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          flexGrow: 0,\r\n          flexShrink: 0,\r\n          alignSelf: \"end\",\r\n          marginLeft: \"auto\",\r\n          width: \"70%\",\r\n        }}\r\n      >\r\n        <img\r\n          src=\"./kevin.png\"\r\n          alt=\"Me!\"\r\n          style={{\r\n            display: \"block\",\r\n            width: \"100%\",\r\n            maxWidth: \"560px\",\r\n            marginLeft: \"auto\",\r\n          }}\r\n        />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n","import MenuIcon from \"@mui/icons-material/Menu\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  IconButton,\r\n  SwipeableDrawer,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\r\nimport { styled } from \"@mui/system\";\r\nimport React from \"react\";\r\n\r\nconst StyledNavButton = styled(Button)(({ theme }) => ({\r\n  color: theme.palette.text.primary,\r\n  textTransform: \"none\",\r\n}));\r\n\r\nexport const Nav = () => {\r\n  // trigger to show navbar background color\r\n  const trigger = useScrollTrigger({ disableHysteresis: true, threshold: 300 });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"sticky\"\r\n      sx={{\r\n        background: !trigger && \"transparent\",\r\n        boxShadow: \"none\",\r\n        transition: \".5s background\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"xl\" sx={{ px: { xs: 0, md: 0, lg: 0 } }}>\r\n        <Toolbar\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h6\" sx={{ fontWeight: \"500\" }}>\r\n            <Box sx={{ display: \"inline\", color: \"primary.main\" }}>Kevin</Box>{\" \"}\r\n            Katzkowski\r\n          </Typography>\r\n\r\n          <Stack\r\n            spacing={1}\r\n            direction=\"row\"\r\n            sx={{ display: { xs: \"none\", sm: \"flex\" } }}\r\n          >\r\n            <StyledNavButton\r\n              size=\"large\"\r\n              variant=\"text\"\r\n              onClick={() =>\r\n                document\r\n                  .getElementById(\"about\")\r\n                  .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n              }\r\n            >\r\n              About\r\n            </StyledNavButton>\r\n            <StyledNavButton\r\n              size=\"large\"\r\n              variant=\"text\"\r\n              onClick={() =>\r\n                document\r\n                  .getElementById(\"projects\")\r\n                  .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n              }\r\n            >\r\n              Projects\r\n            </StyledNavButton>\r\n            <StyledNavButton\r\n              size=\"large\"\r\n              variant=\"text\"\r\n              onClick={() =>\r\n                document\r\n                  .getElementById(\"skills\")\r\n                  .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n              }\r\n            >\r\n              Skills\r\n            </StyledNavButton>\r\n            <StyledNavButton\r\n              size=\"large\"\r\n              variant=\"text\"\r\n              onClick={() =>\r\n                document\r\n                  .getElementById(\"contact\")\r\n                  .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n              }\r\n            >\r\n              Contact\r\n            </StyledNavButton>\r\n          </Stack>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ display: { xs: \"inline-flex\", sm: \"none\" } }}\r\n            onClick={() => setOpen(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <SwipeableDrawer\r\n            anchor=\"right\"\r\n            open={open}\r\n            onOpen={() => setOpen(true)}\r\n            onClose={() => setOpen(false)}\r\n          >\r\n            <Stack\r\n              spacing={2}\r\n              onClick={() => setOpen(false)}\r\n              direction=\"column\"\r\n              sx={{\r\n                display: { xs: \"flex\", sm: \"none\" },\r\n                p: 2,\r\n              }}\r\n            >\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  // scroll after drawer was closed\r\n                  setTimeout(\r\n                    () =>\r\n                      document\r\n                        .getElementById(\"about\")\r\n                        .scrollIntoView({ block: \"start\", behavior: \"smooth\" }),\r\n                    100\r\n                  );\r\n                }}\r\n              >\r\n                About\r\n              </StyledNavButton>\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  // scroll after drawer was closed\r\n                  setTimeout(\r\n                    () =>\r\n                      document\r\n                        .getElementById(\"projects\")\r\n                        .scrollIntoView({ block: \"start\", behavior: \"smooth\" }),\r\n                    100\r\n                  );\r\n                }}\r\n              >\r\n                Projects\r\n              </StyledNavButton>\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  // scroll after drawer was closed\r\n                  setTimeout(\r\n                    () =>\r\n                      document\r\n                        .getElementById(\"skills\")\r\n                        .scrollIntoView({ block: \"start\", behavior: \"smooth\" }),\r\n                    100\r\n                  );\r\n                }}\r\n              >\r\n                Skills\r\n              </StyledNavButton>\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  // scroll after drawer was closed\r\n                  setTimeout(\r\n                    () =>\r\n                      document\r\n                        .getElementById(\"contact\")\r\n                        .scrollIntoView({ block: \"start\", behavior: \"smooth\" }),\r\n                    100\r\n                  );\r\n                }}\r\n              >\r\n                Contact\r\n              </StyledNavButton>\r\n            </Stack>\r\n          </SwipeableDrawer>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { Chip } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport * as Icons from \"react-icons/fa\";\r\n\r\nexport const TechnologyChip = (props) => {\r\n  // get icon from FA icon library\r\n  const getIcon = (name) => {\r\n    const iconName =\r\n      \"Fa\" + name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\r\n\r\n    const IconComponent = Icons[iconName];\r\n    return IconComponent ? <IconComponent /> : null;\r\n  };\r\n\r\n  return props.large ? (\r\n    <Chip\r\n      sx={{\r\n        p: 2,\r\n        borderRadius: \"10px\",\r\n        fontSize: \"0.9rem\",\r\n        flexGrow: 0,\r\n        fontWeight: 500,\r\n        color: \"text.primary\",\r\n        // bgcolor: props.color ? `${props.color}.main` : \"default\",\r\n      }}\r\n      // icon={getIcon(props.name)}\r\n      label={props.name}\r\n      variant=\"outlined\"\r\n      color={props.color ? props.color : \"default\"}\r\n    />\r\n  ) : (\r\n    <Chip\r\n      sx={{ maxWidth: \"8rem\" }}\r\n      // icon={getIcon(props.name)}\r\n      label={props.name}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n};\r\n","import { Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { TechnologyChip } from \"./TechnologyChip\";\r\n\r\nexport const TechnologyList = (props) => {\r\n  // list of chips for technologies\r\n  const technologies = props.technologies\r\n    ? props.technologies.map((t) => (\r\n        <TechnologyChip\r\n          name={t}\r\n          key={t}\r\n          large={props.large}\r\n          color={props.color}\r\n        />\r\n      ))\r\n    : null;\r\n\r\n  return (\r\n    <Stack\r\n      spacing={0}\r\n      direction={props.direction === \"column\" ? \"column\" : \"row\"}\r\n      sx={{ flexWrap: \"wrap\", gap: \"0.25rem\" }}\r\n    >\r\n      {technologies}\r\n    </Stack>\r\n  );\r\n};\r\n","import { Box, Button, Grid, Paper, Stack, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport { FaFilePdf, FaGithub, FaLink } from \"react-icons/fa\";\r\nimport { TechnologyList } from \"./TechnologyList\";\r\n\r\nconst DevItem = styled(\"li\")({\r\n  listStyleType: \"circle\",\r\n});\r\n\r\nexport const Project = (props) => {\r\n  return (\r\n    <Paper variant=\"outlined\">\r\n      <Grid container spacing={0} sx={{ display: \"flex\", p: 3 }}>\r\n        {props.large ? (\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" component=\"h4\" sx={{ mb: 3 }}>\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n        ) : null}\r\n\r\n        {/* project description */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={props.large ? 6 : 12}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            order: props.large ? 1 : 2,\r\n          }}\r\n        >\r\n          {!props.large ? (\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\" component=\"h4\" sx={{ my: 2 }}>\r\n                {props.title}\r\n              </Typography>\r\n            </Grid>\r\n          ) : null}\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"p\"\r\n            sx={{ color: \"text.secondary\" }}\r\n          >\r\n            {props.summary}\r\n          </Typography>\r\n\r\n          <Box component=\"ul\" sx={{ color: \"text.secondary\" }}>\r\n            {props.devProcessItems\r\n              ? props.devProcessItems.map((item) => {\r\n                  return <DevItem key={item}>{item}</DevItem>;\r\n                })\r\n              : null}\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <TechnologyList technologies={props.technologies} />\r\n          </Box>\r\n\r\n          <Stack direction=\"row\" spacing={1} sx={{ mt: 4 }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<FaGithub />}\r\n              aria-label=\"GitHub repository\"\r\n              href={props.repoLink}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              code\r\n            </Button>\r\n            {props.websiteLink ? (\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<FaLink />}\r\n                aria-label=\"Project website\"\r\n                href={props.websiteLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                website\r\n              </Button>\r\n            ) : null}\r\n            {props.pdfLink ? (\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<FaFilePdf />}\r\n                aria-label=\"PDF document download\"\r\n                href={props.pdfLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                PDF\r\n              </Button>\r\n            ) : null}\r\n          </Stack>\r\n        </Grid>\r\n\r\n        {/* project image */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={props.large ? 6 : 12}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            order: props.large ? 2 : 1,\r\n          }}\r\n        >\r\n          <img\r\n            style={{ width: \"100%\", alignSelf: \"center\", borderRadius: 5 }}\r\n            src={props.image ? props.image : \"/logo512.png\"}\r\n            alt=\"project highlight\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n","import { Container, Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Project } from \"./Project\";\r\n\r\nexport const Projects = () => {\r\n  return (\r\n    <Container id=\"projects\" maxWidth=\"xl\" component=\"section\" sx={{ py: 8 }}>\r\n      <Typography variant=\"h3\" component=\"h3\" sx={{ mb: 5 }}>\r\n        Projects\r\n      </Typography>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Project\r\n            title=\"Generating Website Layouts with AI from Natural Language Input\"\r\n            summary=\"Generative Adversarial Networks (GANs) trained to generate images of websites based on natural language messages send to a chatbot\"\r\n            devProcessItems={[\r\n              \"Self-created dataset by web scraping\",\r\n              \"Introduced custom label quality metrics transferred from information retrieval domain\",\r\n              \"Re-labeled dataset based on visual similarity based on k-means clustering and label quality metrics\",\r\n              \"Self-developed chatbot based on spaCy NLP library\",\r\n              \"Multiple GANs trained at large-scale with transfer learning approach using Google Cloud Platform and PyTorch\",\r\n              \"NVIDIA Tesla V100 GPU used as accelerator and for higher image resolution (512 x 512 px)\",\r\n              \"Developed chatbot from scratch with spaCy NLP library\",\r\n              \"UI written in React using Material-UI framework\",\r\n            ]}\r\n            technologies={[\r\n              \"Python\",\r\n              \"PyTorch\",\r\n              \"Pandas\",\r\n              \"MySQL\",\r\n              \"Google Cloud\",\r\n              \"scikit-learn\",\r\n              \"spaCy\",\r\n              \"Flask\",\r\n              \"React\",\r\n            ]}\r\n            repoLink={\"https://github.com/katzkowski/ba-code\"}\r\n            websiteLink={\"https://webgen-bot.netlify.app/\"}\r\n            pdfLink={\"/\"}\r\n            large\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Project\r\n            title=\"Song Popularity Prediction\"\r\n            summary=\"Prediction of a song's popularity based on musical features and artist data from Spotify, in combination with self-collected lyrical features\"\r\n            devProcessItems={[\r\n              \"Lyrics for songs of Spotify dataset fetched from Genius API\",\r\n              \"Stored songs with custom lyric metrics and other features in SQL database\",\r\n              \"Trained classifiers for musical, lyrical and artist features\",\r\n              \"Used ensemble learning methods to increase accurarcy\",\r\n            ]}\r\n            technologies={[\"Python\", \"Pandas\", \"Scikit-Learn\", \"MySQL\"]}\r\n            repoLink={\"https://github.com/jakhac/song-popularity\"}\r\n            pdfLink={\"/\"}\r\n            large\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Project\r\n            title=\"algo-lib\"\r\n            summary=\"Library of algorithms encountered during studies with short descriptions and complexity information\"\r\n            devProcessItems={[\r\n              \"Developed with React and Gatsby.js\",\r\n              \"Data management with GraphQL\",\r\n              \"Component styling using styled-components\",\r\n            ]}\r\n            image={\"/graph-algo.PNG\"}\r\n            technologies={[\r\n              \"React\",\r\n              \"Gatsby\",\r\n              \"GraphQL\",\r\n              \"JavaScript\",\r\n              \"HTML5\",\r\n              \"CSS3\",\r\n            ]}\r\n            repoLink={\"https://github.com/katzkowski/algo-lib\"}\r\n            websiteLink={\"https://katzkowski.github.io/algo-lib/\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Project\r\n            title=\"Graph Algorithm Visualizer\"\r\n            summary=\"Web application for the interactive visualization of graph algorithms on custom graphs\"\r\n            devProcessItems={[\r\n              \"Custom graphs can be drawn on the canvas\",\r\n              \"Visual highlighting of the algorithm's path\",\r\n              \"Backend and frontend written in Vanilla JavaScript\",\r\n              // \"HTML5 & CSS3 for styling\",\r\n            ]}\r\n            image={\"/graph-algo.PNG\"}\r\n            technologies={[\"JavaScript\", \"HTML5\", \"CSS3\"]}\r\n            repoLink={\"https://github.com/jakhac/graph-algorithms\"}\r\n            websiteLink={\"https://graph-algorithms.io\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Project\r\n            title=\"Elephanture Chatbot\"\r\n            summary=\"Development of an interactive adventure-game chatbot which makes use of the OpenAI GPT-2\"\r\n            devProcessItems={[\r\n              \"Team leader of project group of 12 students\",\r\n              \"Project management with Jira\",\r\n              \"Web server development in Python using Flask-Socketio\",\r\n              \"Frontend development with JavaScript, HTML5 & CSS3\",\r\n              \"Database development with SQL\",\r\n            ]}\r\n            image={\"/graph-algo.PNG\"}\r\n            technologies={[\r\n              \"Python\",\r\n              \"Flask\",\r\n              \"JavaScript\",\r\n              \"HTML5\",\r\n              \"CSS3\",\r\n              \"SQL\",\r\n            ]}\r\n            repoLink={\"https://github.com/minotalen/chatbot-group\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Project\r\n            title=\"Chemulator\"\r\n            summary=\"Java application for the computation of chemical formulas  available on Desktop and Android \"\r\n            devProcessItems={[\r\n              \"Desktop application with Java 8 and JavaFX\",\r\n              \"Android app developed in Android Studio\",\r\n              \"Project website with JavaScript, HTML5 & CSS3\",\r\n            ]}\r\n            image={\"/graph-algo.PNG\"}\r\n            technologies={[\"Java\", \"JavaScript\", \"HTML5\", \"CSS3\"]}\r\n            repoLink={\"https://github.com/jakhac/graph-algorithms\"}\r\n            websiteLink={\"https://graph-algorithms.io\"}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import { Box, Container, Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { TechnologyList } from \"./TechnologyList\";\r\n\r\nexport const Skills = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        bgcolor: \"grey.900\",\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        component=\"section\"\r\n        id=\"skills\"\r\n        sx={{\r\n          bgcolor: \"grey.900\",\r\n          py: 8,\r\n        }}\r\n      >\r\n        <Typography variant=\"h3\" component=\"h3\" sx={{ mb: 5 }}>\r\n          Skills\r\n        </Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 4, xl: 14 }}\r\n          sx={{ justifyContent: \"center\" }}\r\n        >\r\n          {/* Programming languages */}\r\n          <Grid item xs={8} sm={5} md={3}>\r\n            <Typography variant=\"h5\" component=\"h5\" sx={{ my: 2 }}>\r\n              Languages\r\n            </Typography>\r\n            <TechnologyList\r\n              direction=\"column\"\r\n              technologies={[\r\n                \"Python\",\r\n                \"JavaScript\",\r\n                \"SQL\",\r\n                \"Haskell\",\r\n                \"Java\",\r\n                \"C / C++\",\r\n                \"HTML5 & CSS3\",\r\n              ]}\r\n              large\r\n              color=\"error\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* AI technologies */}\r\n          <Grid item xs={8} sm={5} md={3}>\r\n            <Typography variant=\"h5\" component=\"h5\" sx={{ my: 2 }}>\r\n              AI & Data Science\r\n            </Typography>\r\n            <TechnologyList\r\n              direction=\"column\"\r\n              technologies={[\r\n                \"Pytorch\",\r\n                \"scikit-learn\",\r\n                \"spaCy\",\r\n                \"Jupyter\",\r\n                \"Pandas\",\r\n                \"Keras\",\r\n                \"matplotlib\",\r\n              ]}\r\n              large\r\n              color=\"success\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Other, more general frameworks */}\r\n          <Grid item xs={8} sm={5} md={3}>\r\n            <Typography variant=\"h5\" component=\"h5\" sx={{ my: 2 }}>\r\n              Other frameworks\r\n            </Typography>\r\n            <TechnologyList\r\n              direction=\"column\"\r\n              technologies={[\r\n                \"Flask\",\r\n                \"Node.js\",\r\n                \"React\",\r\n                \"Gatsby\",\r\n                \"Material UI\",\r\n                \"JavaFX\",\r\n              ]}\r\n              large\r\n              color=\"info\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Software tools */}\r\n          <Grid item xs={8} sm={5} md={3}>\r\n            <Typography variant=\"h5\" component=\"h5\" sx={{ my: 2 }}>\r\n              Tools\r\n            </Typography>\r\n            <TechnologyList\r\n              direction=\"column\"\r\n              technologies={[\r\n                \"Git\",\r\n                \"Jira\",\r\n                \"Unix VM\",\r\n                \"Google Cloud\",\r\n                \"Figma/Adobe XD\",\r\n                \"LaTeX\",\r\n                \"MS Office\",\r\n              ]}\r\n              large\r\n              color=\"secondary\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","export const darkTheme = {\r\n  typography: {\r\n    fontFamily: [\r\n      \"Inter\",\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    h1: {\r\n      fontWeight: 700,\r\n    },\r\n    h3: {\r\n      fontWeight: 700,\r\n    },\r\n    h4: {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 10,\r\n  },\r\n  palette: {\r\n    mode: \"dark\",\r\n  },\r\n};\r\n","import { createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { About } from \"./About\";\r\nimport { Contact } from \"./Contact\";\r\nimport { Landing } from \"./Landing\";\r\nimport { Nav } from \"./Nav\";\r\nimport { Projects } from \"./Projects\";\r\nimport { Skills } from \"./Skills\";\r\nimport { darkTheme } from \"./theme\";\r\n\r\nfunction App() {\r\n  const theme = createTheme(darkTheme);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Box>\r\n        <Nav />\r\n        <Landing />\r\n        <About />\r\n        <Projects />\r\n        <Skills />\r\n        <Contact />\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}