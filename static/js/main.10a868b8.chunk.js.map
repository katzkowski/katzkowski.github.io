{"version":3,"sources":["TimelineCard.js","About.js","Contact.js","Landing.js","Nav.js","TechnologyChip.js","TechnologyList.js","Project.js","Projects.js","Skills.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["StyledTimelineItem","withStyles","missingOppositeContent","display","TimelineItem","TimelineCard","props","TimelineSeparator","TimelineDot","color","isLast","TimelineConnector","TimelineContent","Paper","variant","sx","alignItems","justifyContent","p","height","width","textAlign","Typography","flexDirection","endDate","startDate","style","lineHeight","Divider","orientation","flexItem","mx","component","title","description","maxHeight","pl","marginLeft","href","imgHref","src","img","alt","imgAlt","maxWidth","alignSelf","About","bgcolor","Container","id","boxSizing","py","mb","Grid","container","spacing","item","xs","lg","mt","Link","underline","Timeline","margin","Contact","elevation","m","my","Stack","direction","IconButton","edge","target","rel","Landing","position","pr","sm","md","xl","flexShrink","zIndex","Button","onClick","document","getElementById","scrollIntoView","block","behavior","flexGrow","StyledNavButton","styled","theme","palette","text","primary","textTransform","Nav","trigger","useScrollTrigger","disableHysteresis","threshold","React","useState","open","setOpen","AppBar","background","boxShadow","transition","px","Toolbar","fontWeight","size","SwipeableDrawer","anchor","onOpen","onClose","setTimeout","TechnologyChip","large","Chip","borderRadius","fontSize","label","name","TechnologyList","technologies","map","t","flexWrap","gap","DevItem","listStyleType","Project","rowSpacing","columnSpacing","order","summary","devProcessItems","repoLink","startIcon","websiteLink","pdfLink","image","Projects","Skills","darkTheme","typography","fontFamily","join","h1","h3","h4","shape","mode","App","createTheme","ThemeProvider","CssBaseline","Box","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.10a868b8.chunk.js","sourcesContent":["import TimelineConnector from \"@mui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@mui/lab/TimelineContent\";\r\nimport TimelineDot from \"@mui/lab/TimelineDot\";\r\nimport TimelineItem from \"@mui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@mui/lab/TimelineSeparator\";\r\nimport { Box, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\n\r\nconst StyledTimelineItem = withStyles({\r\n  missingOppositeContent: {\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n})(TimelineItem);\r\n\r\nexport const TimelineCard = (props) => {\r\n  return (\r\n    <StyledTimelineItem>\r\n      <TimelineSeparator>\r\n        <TimelineDot color=\"primary\" />\r\n        {props.isLast ? null : <TimelineConnector />}\r\n      </TimelineSeparator>\r\n      <TimelineContent>\r\n        <Paper\r\n          variant=\"outlined\"\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            p: 1,\r\n          }}\r\n        >\r\n          {/* Start and end date */}\r\n          <Box\r\n            sx={{\r\n              height: \"100%\",\r\n              width: \"3rem\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"overline\"\r\n              sx={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              {props.endDate\r\n                ? props.endDate\r\n                : props.startDate\r\n                ? props.startDate\r\n                : null}\r\n              {props.startDate && props.endDate ? (\r\n                <center style={{ lineHeight: 1 }}>-</center>\r\n              ) : null}\r\n              {props.startDate && props.endDate ? props.startDate : null}\r\n            </Typography>\r\n          </Box>\r\n          {/* Divider */}\r\n          <Divider orientation=\"vertical\" flexItem sx={{ mx: 1 }} />\r\n\r\n          {/* Title */}\r\n          <Box\r\n            sx={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle2\" component=\"div\">\r\n              <b>{props.title}</b>\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" component=\"div\">\r\n              {props.description}\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* Logo */}\r\n          <Box\r\n            sx={{\r\n              maxHeight: \"3rem\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              pl: 1,\r\n              marginLeft: \"auto\",\r\n            }}\r\n          >\r\n            <a href={props.imgHref}>\r\n              <img\r\n                src={props.img}\r\n                alt={props.imgAlt}\r\n                style={{\r\n                  display: \"block\",\r\n                  maxWidth: \"4rem\",\r\n                  maxHeight: \"3rem\",\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  alignSelf: \"flex-end\",\r\n                }}\r\n              />\r\n            </a>\r\n          </Box>\r\n        </Paper>\r\n      </TimelineContent>\r\n    </StyledTimelineItem>\r\n  );\r\n};\r\n","import Timeline from \"@mui/lab/Timeline\";\r\nimport { Box, Container, Grid, Link, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { TimelineCard } from \"./TimelineCard\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        bgcolor: \"grey.900\",\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        component=\"section\"\r\n        id=\"about\"\r\n        sx={{ bgcolor: \"grey.900\", boxSizing: \"border-box\", py: 8 }}\r\n      >\r\n        <Typography variant=\"h3\" component=\"h3\" sx={{ mb: 5 }}>\r\n          About me\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* Personal description */}\r\n          <Grid item xs={12} lg={5}>\r\n            {/* <Typography variant=\"h6\" component=\"h6\">\r\n              Kevin Katzkowski\r\n            </Typography>\r\n\r\n            <Typography variant=\"caption\" component=\"div\" sx={{ mb: 3 }}>\r\n              M. Sc. Informatics student at the Technical University of Munich\r\n            </Typography> */}\r\n\r\n            <Typography variant=\"body1\" component=\"div\" sx={{ mt: 5, mb: 2 }}>\r\n              I'm a Master Informatics student at TUM in the first semester with\r\n              a huge passion for artificial intelligence and computer science in\r\n              general. Specifically, I'm focused on deep learning with neural\r\n              networks, machine learning, data science and interested in\r\n              subfields like computer vision and natural language processing.\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" component=\"div\" sx={{ mb: 2 }}>\r\n              I have three years of experience in several programming languages,\r\n              including Python, JavaScript, Java and others (see{\" \"}\r\n              <Link href=\"#skills\" underline=\"hover\">\r\n                skills\r\n              </Link>\r\n              ). The{\" \"}\r\n              <Link href=\"#projects\" underline=\"hover\">\r\n                projects\r\n              </Link>{\" \"}\r\n              section below highlights a selection of my work at the\r\n              intersection of AI, data science and software development.\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" component=\"div\" sx={{ mb: 2 }}>\r\n              Besides that, I enjoy solving complex mathematical and logical\r\n              problems. I additionally took modules in the mathematical and\r\n              logical domain worth 37 credits to extend my theoretical\r\n              background during my bachelor's studies.\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" component=\"div\" sx={{ mb: 2 }}>\r\n              My clear aim for the future is to continue my specialization in\r\n              deep learning and machine learning, so I can significantly\r\n              contribute to research and the technological advance in the field\r\n              of artificial intelligence.\r\n            </Typography>\r\n          </Grid>\r\n\r\n          {/* Education & Work Experience*/}\r\n          <Grid item xs={12} lg={7}>\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Education & Work Experience\r\n            </Typography>\r\n\r\n            <Timeline\r\n              // position=\"alternate\"\r\n              sx={{ maxWidth: \"900px\", margin: \"auto\" }}\r\n            >\r\n              <TimelineCard\r\n                title=\"M. Sc. Informatics\"\r\n                startDate=\"2021\"\r\n                endDate=\"Today\"\r\n                description=\"TUM\"\r\n                img=\"./tum-logo.png\"\r\n                imgAlt=\"TUM Logo\"\r\n                imgHref=\"https://tum.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                title=\"B. Sc. Media Informatics\"\r\n                startDate=\"2018\"\r\n                endDate=\"2021\"\r\n                description=\"University of Bremen\"\r\n                img=\"./uni-hb-logo.png\"\r\n                imgAlt=\"Uni Bremen Logo\"\r\n                imgHref=\"https://uni-bremen.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                title=\"Working Student\"\r\n                startDate=\"2017\"\r\n                endDate=\"2020\"\r\n                description=\"WebMen Internet GmbH\"\r\n                img=\"./webmen-logo.png\"\r\n                imgAlt=\"WebMen Logo\"\r\n                imgHref=\"https://webmen.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                title=\"Intern Software Dev.\"\r\n                startDate=\"04.2017\"\r\n                description=\"WebMen Internet GmbH\"\r\n                img=\"./webmen-logo.png\"\r\n                imgAlt=\"WebMen Logo\"\r\n                imgHref=\"https://webmen.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                title=\"Intern Software Dev.\"\r\n                startDate=\"05.2015\"\r\n                description=\"encoway GmbH\"\r\n                img=\"./encoway-logo.png\"\r\n                imgAlt=\"encoway Logo\"\r\n                imgHref=\"https://encoway.de/\"\r\n              />\r\n\r\n              <TimelineCard\r\n                isLast\r\n                title=\"A-Levels (Abitur)\"\r\n                startDate=\"2010\"\r\n                endDate=\"2018\"\r\n                description=\"Gymnasium Horn\"\r\n                img=\"./gym-horn-logo.png\"\r\n                imgAlt=\"Gymnasium Horn Logo\"\r\n                imgHref=\"https://309.sixcms.schule.bremen.de/startseite-1459\"\r\n              />\r\n            </Timeline>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\r\nimport { Container, IconButton, Paper, Stack, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const Contact = () => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      component=\"section\"\r\n      id=\"contact\"\r\n      sx={{\r\n        height: \"95vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={0}\r\n        // variant=\"outlined\"\r\n        sx={{ m: 10, width: \"80%\", height: \"40%\", textAlign: \"center\" }}\r\n      >\r\n        <Typography variant=\"h1\" component=\"h2\" sx={{ my: 4 }}>\r\n          Get in Touch\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          I'm happy to hear from you!\r\n        </Typography>\r\n        {/* <Button variant=\"outlined\" sx={{ my: 3 }} endIcon={<MdWavingHand />}>\r\n          Say hello\r\n        </Button> */}\r\n        <Stack\r\n          spacing={{ xs: 1 }}\r\n          direction=\"row\"\r\n          sx={{\r\n            mt: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"GitHub\"\r\n            sx={{ display: { xs: \"inline-flex\" }, color: \"primary.main\" }}\r\n            href=\"https://github.com/katzkowski\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <GitHubIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"LinkedIn\"\r\n            sx={{ display: { xs: \"inline-flex\" }, color: \"primary.main\" }}\r\n            href=\"https://www.linkedin.com/in/kevin-katzkowski\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <LinkedInIcon />\r\n          </IconButton>\r\n        </Stack>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n","import { Box, Button, Container, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const Landing = () => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      component=\"section\"\r\n      sx={{\r\n        height: \"90vh\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        mt: 4,\r\n        pr: { xs: 0, sm: 0, md: 0, lg: 0, xl: 0 },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          mt: { xs: 0, md: \"15vw\" },\r\n          flexShrink: 1,\r\n          width: \"65%\",\r\n          zIndex: 1,\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h1\" component=\"h1\" sx={{ my: { xs: 0, md: 4 } }}>\r\n          Hey, I'm{\" \"}\r\n          <Box sx={{ display: \"inline\", color: \"primary.main\" }}>Kevin</Box>.\r\n        </Typography>\r\n\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          component=\"p\"\r\n          sx={{ my: 2, maxWidth: \"70%\" }}\r\n        >\r\n          M. Sc. Informatics student at the Technical University of Munich\r\n          focused on deep and machine learning.\r\n        </Typography>\r\n\r\n        <Button\r\n          variant=\"outlined\"\r\n          sx={{ my: 2 }}\r\n          onClick={() =>\r\n            document\r\n              .getElementById(\"projects\")\r\n              .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n          }\r\n        >\r\n          My projects\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Image */}\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          flexGrow: 0,\r\n          flexShrink: 0,\r\n          alignSelf: \"end\",\r\n          marginLeft: \"auto\",\r\n          width: \"70%\",\r\n        }}\r\n      >\r\n        <img\r\n          src=\"./kevin.png\"\r\n          alt=\"Me!\"\r\n          style={{\r\n            display: \"block\",\r\n            width: \"100%\",\r\n            maxWidth: \"560px\",\r\n            marginLeft: \"auto\",\r\n          }}\r\n        />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n","import GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  IconButton,\r\n  SwipeableDrawer,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\r\nimport { styled } from \"@mui/system\";\r\nimport React from \"react\";\r\n\r\nconst StyledNavButton = styled(Button)(({ theme }) => ({\r\n  color: theme.palette.text.primary,\r\n  textTransform: \"none\",\r\n}));\r\n\r\nexport const Nav = () => {\r\n  // trigger to show navbar background color\r\n  const trigger = useScrollTrigger({ disableHysteresis: true, threshold: 300 });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"sticky\"\r\n      sx={{\r\n        background: !trigger && \"transparent\",\r\n        boxShadow: \"none\",\r\n        transition: \".5s background\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"xl\" sx={{ px: { xs: 0, md: 0, lg: 0 } }}>\r\n        <Toolbar\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h6\" sx={{ fontWeight: \"500\" }}>\r\n            <Box sx={{ display: \"inline\", color: \"primary.main\" }}>Kevin</Box>{\" \"}\r\n            Katzkowski\r\n          </Typography>\r\n\r\n          <Stack spacing={{ sm: 1, md: 2 }} direction=\"row\">\r\n            <Stack\r\n              spacing={{ sm: 0, md: 1 }}\r\n              direction=\"row\"\r\n              sx={{ display: { xs: \"none\", sm: \"flex\" } }}\r\n            >\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() =>\r\n                  document\r\n                    .getElementById(\"about\")\r\n                    .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n                }\r\n              >\r\n                About\r\n              </StyledNavButton>\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() =>\r\n                  document\r\n                    .getElementById(\"projects\")\r\n                    .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n                }\r\n              >\r\n                Projects\r\n              </StyledNavButton>\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() =>\r\n                  document\r\n                    .getElementById(\"skills\")\r\n                    .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n                }\r\n              >\r\n                Skills\r\n              </StyledNavButton>\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() =>\r\n                  document\r\n                    .getElementById(\"contact\")\r\n                    .scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n                }\r\n              >\r\n                Contact\r\n              </StyledNavButton>\r\n            </Stack>\r\n            <Stack spacing={{ xs: 1, sm: 0, md: 1 }} direction=\"row\">\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"GitHub\"\r\n                sx={{ display: { xs: \"inline-flex\" } }}\r\n                href=\"https://github.com/katzkowski\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <GitHubIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"LinkedIn\"\r\n                sx={{ display: { xs: \"inline-flex\" } }}\r\n                href=\"https://www.linkedin.com/in/kevin-katzkowski\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <LinkedInIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n                sx={{ display: { xs: \"inline-flex\", sm: \"none\" } }}\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </Stack>\r\n          </Stack>\r\n          <SwipeableDrawer\r\n            anchor=\"right\"\r\n            open={open}\r\n            onOpen={() => setOpen(true)}\r\n            onClose={() => setOpen(false)}\r\n          >\r\n            <Stack\r\n              spacing={2}\r\n              onClick={() => setOpen(false)}\r\n              direction=\"column\"\r\n              sx={{\r\n                display: { xs: \"flex\", sm: \"none\" },\r\n                p: 2,\r\n              }}\r\n            >\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  // scroll after drawer was closed\r\n                  setTimeout(\r\n                    () =>\r\n                      document\r\n                        .getElementById(\"about\")\r\n                        .scrollIntoView({ block: \"start\", behavior: \"smooth\" }),\r\n                    100\r\n                  );\r\n                }}\r\n              >\r\n                About\r\n              </StyledNavButton>\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  // scroll after drawer was closed\r\n                  setTimeout(\r\n                    () =>\r\n                      document\r\n                        .getElementById(\"projects\")\r\n                        .scrollIntoView({ block: \"start\", behavior: \"smooth\" }),\r\n                    100\r\n                  );\r\n                }}\r\n              >\r\n                Projects\r\n              </StyledNavButton>\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  // scroll after drawer was closed\r\n                  setTimeout(\r\n                    () =>\r\n                      document\r\n                        .getElementById(\"skills\")\r\n                        .scrollIntoView({ block: \"start\", behavior: \"smooth\" }),\r\n                    100\r\n                  );\r\n                }}\r\n              >\r\n                Skills\r\n              </StyledNavButton>\r\n              <StyledNavButton\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  // scroll after drawer was closed\r\n                  setTimeout(\r\n                    () =>\r\n                      document\r\n                        .getElementById(\"contact\")\r\n                        .scrollIntoView({ block: \"start\", behavior: \"smooth\" }),\r\n                    100\r\n                  );\r\n                }}\r\n              >\r\n                Contact\r\n              </StyledNavButton>\r\n            </Stack>\r\n          </SwipeableDrawer>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { Chip } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport * as Icons from \"react-icons/fa\";\r\n\r\nexport const TechnologyChip = (props) => {\r\n  // get icon from FA icon library\r\n  const getIcon = (name) => {\r\n    const iconName =\r\n      \"Fa\" + name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\r\n\r\n    const IconComponent = Icons[iconName];\r\n    return IconComponent ? <IconComponent /> : null;\r\n  };\r\n\r\n  return props.large ? (\r\n    <Chip\r\n      sx={{\r\n        p: 2,\r\n        borderRadius: \"10px\",\r\n        fontSize: \"0.9rem\",\r\n        flexGrow: 0,\r\n        fontWeight: 500,\r\n        color: \"text.primary\",\r\n        // bgcolor: props.color ? `${props.color}.main` : \"default\",\r\n      }}\r\n      // icon={getIcon(props.name)}\r\n      label={props.name}\r\n      variant=\"outlined\"\r\n      color={props.color ? props.color : \"default\"}\r\n    />\r\n  ) : (\r\n    <Chip\r\n      sx={{ maxWidth: \"8rem\" }}\r\n      // icon={getIcon(props.name)}\r\n      label={props.name}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n};\r\n","import { Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { TechnologyChip } from \"./TechnologyChip\";\r\n\r\nexport const TechnologyList = (props) => {\r\n  // list of chips for technologies\r\n  const technologies = props.technologies\r\n    ? props.technologies.map((t) => (\r\n        <TechnologyChip\r\n          name={t}\r\n          key={t}\r\n          large={props.large}\r\n          color={props.color}\r\n        />\r\n      ))\r\n    : null;\r\n\r\n  return (\r\n    <Stack\r\n      spacing={0}\r\n      direction={props.direction === \"column\" ? \"column\" : \"row\"}\r\n      sx={{ flexWrap: \"wrap\", gap: \"0.25rem\" }}\r\n    >\r\n      {technologies}\r\n    </Stack>\r\n  );\r\n};\r\n","import { Box, Button, Grid, Paper, Stack, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport { FaFilePdf, FaGithub, FaLink } from \"react-icons/fa\";\r\nimport { TechnologyList } from \"./TechnologyList\";\r\n\r\nconst DevItem = styled(\"li\")({\r\n  listStyleType: \"circle\",\r\n});\r\n\r\nexport const Project = (props) => {\r\n  return (\r\n    <Paper variant=\"outlined\" sx={{ bgcolor: \"grey.900\" }}>\r\n      <Grid\r\n        container\r\n        rowSpacing={1}\r\n        columnSpacing={4}\r\n        sx={{ display: \"flex\", p: 3 }}\r\n      >\r\n        {props.large ? (\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" component=\"h4\" sx={{ mb: 3 }}>\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n        ) : null}\r\n\r\n        {/* Lead text for large card above image for mobile */}\r\n        {props.large ? (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sx={{\r\n              display: { xs: \"flex\", md: \"none\" },\r\n              flexDirection: \"column\",\r\n              order: 0,\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              sx={{ color: \"text.secondary\", mb: { xs: 2, md: 0 } }}\r\n            >\r\n              {props.summary}\r\n            </Typography>\r\n          </Grid>\r\n        ) : null}\r\n\r\n        {/* project description */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={props.large ? 6 : 12}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            order: props.large ? { xs: 2, md: 1 } : 2,\r\n          }}\r\n        >\r\n          {!props.large ? (\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\" component=\"h4\" sx={{ my: 2 }}>\r\n                {props.title}\r\n              </Typography>\r\n            </Grid>\r\n          ) : null}\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"p\"\r\n            sx={{\r\n              color: \"text.secondary\",\r\n              display: props.large ? { xs: \"none\", md: \"block\" } : \"block\",\r\n            }}\r\n          >\r\n            {props.summary}\r\n          </Typography>\r\n\r\n          <Box component=\"ul\" sx={{ color: \"text.secondary\" }}>\r\n            {props.devProcessItems\r\n              ? props.devProcessItems.map((item) => {\r\n                  return <DevItem key={item}>{item}</DevItem>;\r\n                })\r\n              : null}\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <TechnologyList technologies={props.technologies} />\r\n          </Box>\r\n\r\n          <Stack direction=\"row\" spacing={1} sx={{ mt: 4 }}>\r\n            {props.repoLink ? (\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<FaGithub />}\r\n                aria-label=\"GitHub repository\"\r\n                href={props.repoLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                code\r\n              </Button>\r\n            ) : null}\r\n            {props.websiteLink ? (\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<FaLink />}\r\n                aria-label=\"Project website\"\r\n                href={props.websiteLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                website\r\n              </Button>\r\n            ) : null}\r\n            {props.pdfLink ? (\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<FaFilePdf />}\r\n                aria-label=\"PDF document download\"\r\n                href={props.pdfLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                PDF\r\n              </Button>\r\n            ) : null}\r\n          </Stack>\r\n        </Grid>\r\n\r\n        {/* project image */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={props.large ? 6 : 12}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            order: props.large ? { xs: 1, md: 2 } : 1,\r\n          }}\r\n        >\r\n          <img\r\n            style={{ width: \"100%\", alignSelf: \"center\", borderRadius: 5 }}\r\n            src={props.image ? props.image : \"/logo512.png\"}\r\n            alt=\"project highlight\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n","import { Container, Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Project } from \"./Project\";\r\n\r\nexport const Projects = () => {\r\n  return (\r\n    <Container id=\"projects\" maxWidth=\"xl\" component=\"section\" sx={{ py: 8 }}>\r\n      <Typography variant=\"h3\" component=\"h3\" sx={{ mb: 5 }}>\r\n        Projects\r\n      </Typography>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Project\r\n            title=\"Traffic Sign Classification with Neural Networks\"\r\n            summary=\"Trained and implemented several neural networks for the task of traffic sign classification\"\r\n            devProcessItems={[\r\n              \"Dataset from German Traffic Sign Recognition Benechmark (GTSRB)\",\r\n              \"Implemented fully-connected and convolutional neural networks in PyTorch\",\r\n              \"Explored data augmentation and different architectures\",\r\n              \"Hyperparameter tuning for architecture choices and optimization algorithms\",\r\n              \"Planned implementationss: residual networks, (variational) autoencoder\",\r\n              \"Best test accuracy: 94.05% (2 conv. layers, max pooling, ReLU, BN, 2 FC layers)\",\r\n            ]}\r\n            technologies={[\"Python\", \"PyTorch\", \"Tensorboard\"]}\r\n            image={\"/traffic-sign-classification.jpg\"}\r\n            repoLink={\r\n              \"https://github.com/katzkowski/traffic-sign-classification\"\r\n            }\r\n            large\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Project\r\n            title=\"Generating Website Layouts with AI from Natural Language Input\"\r\n            summary=\"Trained Generative Adversarial Networks (GANs) to generate images of websites based on natural language messages send to a chatbot\"\r\n            devProcessItems={[\r\n              \"Self-created dataset by web scraping\",\r\n              \"Introduced custom label quality metrics transferred from information retrieval domain\",\r\n              \"Re-labeled dataset based on visual similarity based on k-means clustering and label quality metrics\",\r\n              \"Self-developed chatbot based on spaCy NLP library\",\r\n              \"Multiple GANs trained at large-scale with transfer learning approach using Google Cloud Platform and PyTorch\",\r\n              \"Chatbot UI written in React using Material-UI framework\",\r\n            ]}\r\n            technologies={[\r\n              \"Python\",\r\n              \"PyTorch\",\r\n              \"Pandas\",\r\n              \"MySQL\",\r\n              \"Google Cloud\",\r\n              \"scikit-learn\",\r\n              \"spaCy\",\r\n              \"React\",\r\n            ]}\r\n            image={\"/generated-websites-samples-small.JPG\"}\r\n            repoLink={\"https://github.com/katzkowski/webgen-chatbot\"}\r\n            websiteLink={\"https://webgen-bot.netlify.app/\"}\r\n            // pdfLink={\"/\"}\r\n            large\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Project\r\n            title=\"Song Popularity Prediction using Ensemble Learning\"\r\n            summary=\"Prediction of a song's popularity based on musical features, lyrics and artist data\"\r\n            devProcessItems={[\r\n              \"Musical features and artist data from Spotify dataset\",\r\n              \"Lyrics for songs of Spotify dataset fetched from Genius API\",\r\n              \"Stored songs with self-created lyrical features and other features in SQL database\",\r\n              \"Trained classifiers for musical, lyrical and artist features\",\r\n              \"Used ensemble learning methods to increase accurarcy\",\r\n            ]}\r\n            technologies={[\"Python\", \"Pandas\", \"Scikit-Learn\", \"MySQL\"]}\r\n            image={\"/song-popularity-hero.JPG\"}\r\n            repoLink={\"https://github.com/jakhac/song-popularity\"}\r\n            // pdfLink={\"/\"}\r\n            large\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Project\r\n            title=\"algo-lib\"\r\n            summary=\"Library of algorithms encountered during studies with short descriptions\"\r\n            devProcessItems={[\r\n              \"Developed with React and Gatsby.js\",\r\n              \"Data management with GraphQL\",\r\n              \"Component styling using styled-components\",\r\n            ]}\r\n            image={\"/algo-lib-hero.jpg\"}\r\n            technologies={[\r\n              \"React\",\r\n              \"Gatsby\",\r\n              \"GraphQL\",\r\n              \"JavaScript\",\r\n              \"HTML5\",\r\n              \"CSS3\",\r\n            ]}\r\n            repoLink={\"https://github.com/katzkowski/algo-lib\"}\r\n            websiteLink={\"https://katzkowski.github.io/algo-lib/\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Project\r\n            title=\"Graph Algorithm Visualizer\"\r\n            summary=\"Web application for the interactive visualization of graph algorithms on custom graphs\"\r\n            devProcessItems={[\r\n              \"Custom graphs can be drawn on the canvas\",\r\n              \"Visual highlighting of the algorithm's path\",\r\n              \"Backend and frontend written in Vanilla JavaScript\",\r\n              // \"HTML5 & CSS3 for styling\",\r\n            ]}\r\n            image={\"/graph-algo.PNG\"}\r\n            technologies={[\"JavaScript\", \"HTML5\", \"CSS3\"]}\r\n            repoLink={\"https://github.com/jakhac/graph-algorithms\"}\r\n            websiteLink={\"https://graph-algorithms.io\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Project\r\n            title=\"Elephanture Chatbot\"\r\n            summary=\"Interactive adventure-game chatbot which makes use of the OpenAI GPT-2\"\r\n            devProcessItems={[\r\n              \"Team leader of project group of 12 students\",\r\n              \"Project management with Jira\",\r\n              \"Web server development in Python using Flask-Socketio\",\r\n              \"Frontend development with JavaScript, HTML5 & CSS3\",\r\n              \"Database development with SQL\",\r\n            ]}\r\n            image={\"/elephanture-hero.png\"}\r\n            technologies={[\r\n              \"Python\",\r\n              \"Flask\",\r\n              \"JavaScript\",\r\n              \"HTML5\",\r\n              \"CSS3\",\r\n              \"SQL\",\r\n            ]}\r\n            repoLink={\"https://github.com/katzkowski/chatbot-group\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Project\r\n            title=\"chemulator\"\r\n            summary=\"Java application for the computation of chemical formulas  available on Desktop/Android \"\r\n            devProcessItems={[\r\n              \"Desktop application with Java 8 and JavaFX\",\r\n              \"Android app developed in Android Studio\",\r\n              \"Project website with JavaScript, HTML5 & CSS3\",\r\n            ]}\r\n            image={\"/chemulator-hero.jpg\"}\r\n            technologies={[\"Java\", \"JavaScript\", \"HTML5\", \"CSS3\"]}\r\n            repoLink={\"https://github.com/katzkowski/chemulator/\"}\r\n            websiteLink={\"https://katzkowski.github.io/chemulator/\"}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import { Box, Container, Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { TechnologyList } from \"./TechnologyList\";\r\n\r\nexport const Skills = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        bgcolor: \"grey.900\",\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        component=\"section\"\r\n        id=\"skills\"\r\n        sx={{\r\n          bgcolor: \"grey.900\",\r\n          py: 8,\r\n        }}\r\n      >\r\n        <Typography variant=\"h3\" component=\"h3\" sx={{ mb: 5 }}>\r\n          Skills\r\n        </Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 4, xl: 14 }}\r\n          sx={{ justifyContent: \"center\" }}\r\n        >\r\n          {/* Programming languages */}\r\n          <Grid item xs={8} sm={5} md={3}>\r\n            <Typography variant=\"h5\" component=\"h5\" sx={{ my: 2 }}>\r\n              Languages\r\n            </Typography>\r\n            <TechnologyList\r\n              direction=\"column\"\r\n              technologies={[\r\n                \"Python\",\r\n                \"JavaScript\",\r\n                \"SQL\",\r\n                \"Haskell\",\r\n                \"Java\",\r\n                \"C / C++\",\r\n                \"HTML5 & CSS3\",\r\n              ]}\r\n              large\r\n              color=\"error\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* AI technologies */}\r\n          <Grid item xs={8} sm={5} md={3}>\r\n            <Typography variant=\"h5\" component=\"h5\" sx={{ my: 2 }}>\r\n              ML & Data Science\r\n            </Typography>\r\n            <TechnologyList\r\n              direction=\"column\"\r\n              technologies={[\r\n                \"Pytorch\",\r\n                \"numpy\",\r\n                \"scikit-learn\",\r\n                \"spaCy\",\r\n                \"Jupyter\",\r\n                \"Pandas\",\r\n                \"matplotlib\",\r\n              ]}\r\n              large\r\n              color=\"success\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Other, more general frameworks */}\r\n          <Grid item xs={8} sm={5} md={3}>\r\n            <Typography variant=\"h5\" component=\"h5\" sx={{ my: 2 }}>\r\n              Other frameworks\r\n            </Typography>\r\n            <TechnologyList\r\n              direction=\"column\"\r\n              technologies={[\r\n                \"Flask\",\r\n                \"Node.js\",\r\n                \"React\",\r\n                \"Gatsby\",\r\n                \"Material UI\",\r\n                \"Bootstrap\",\r\n                \"JavaFX\",\r\n              ]}\r\n              large\r\n              color=\"info\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Software tools */}\r\n          <Grid item xs={8} sm={5} md={3}>\r\n            <Typography variant=\"h5\" component=\"h5\" sx={{ my: 2 }}>\r\n              Tools\r\n            </Typography>\r\n            <TechnologyList\r\n              direction=\"column\"\r\n              technologies={[\r\n                \"Git\",\r\n                \"Jira\",\r\n                \"Unix VM\",\r\n                \"Google Cloud\",\r\n                \"Figma/Adobe XD\",\r\n                \"LaTeX\",\r\n                \"MS Office\",\r\n              ]}\r\n              large\r\n              color=\"secondary\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","export const darkTheme = {\r\n  typography: {\r\n    fontFamily: [\r\n      \"Inter\",\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    h1: {\r\n      fontWeight: 700,\r\n    },\r\n    h3: {\r\n      fontWeight: 700,\r\n    },\r\n    h4: {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 10,\r\n  },\r\n  palette: {\r\n    mode: \"dark\",\r\n  },\r\n};\r\n","import { createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { About } from \"./About\";\r\nimport { Contact } from \"./Contact\";\r\nimport { Landing } from \"./Landing\";\r\nimport { Nav } from \"./Nav\";\r\nimport { Projects } from \"./Projects\";\r\nimport { Skills } from \"./Skills\";\r\nimport { darkTheme } from \"./theme\";\r\n\r\nfunction App() {\r\n  const theme = createTheme(darkTheme);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Box>\r\n        <Nav />\r\n        <Landing />\r\n        <About />\r\n        <Projects />\r\n        <Skills />\r\n        <Contact />\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}